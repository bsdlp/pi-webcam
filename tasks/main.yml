---
- name: register pi model
  when: ansible_local.sbc is not defined
  block:
    - name: create facts directory
      ansible.builtin.file:
        path: '/etc/ansible/facts.d'
        state: directory
        recurse: true

    - name: set sbc_model fact file
      ansible.builtin.copy:
        src: sbc_model.fact
        dest: /etc/ansible/facts.d/sbc.fact
        mode: 0755
        owner: root
        group: root

    - name: call setup again
      ansible.builtin.setup:

# parse sbc model to include the correct configuration variables
- name: set default values
  ansible.builtin.include_vars:
    file: rpi_4b.yml

- name: raspberry pi 4b
  when: ansible_local.sbc.model.startswith("Raspberry Pi 4 Model B")
  ansible.builtin.include_vars:
    file: rpi_4b.yml

- name: raspberry pi zero w
  when: ansible_local.sbc.model.startswith("Raspberry Pi Zero W")
  ansible.builtin.include_vars:
    file: rpi_zero_w.yml

- name: configure gpu memory
  ansible.builtin.shell:
    cmd: raspi-config nonint do_memory_split {{ rpi_gpu_mem_mb }}

- name: raspberry pi update
  ansible.builtin.shell:
    cmd: rpi-update
  environment:
    SKIP_WARNING: "1"
  notify:
    - Reboot

- name: write udev rule for picam
  ansible.builtin.copy:
    dest: /etc/udev/rules.d/99-camera.rules
    content: 'SUBSYSTEM=="vchiq",MODE="0666"'
  notify:
    - Reload udev

- name: ensure picamera2 is installed
  ansible.builtin.apt:
    name: python3-picamera2
    install_recommends: false
    state: latest
    update_cache: true
